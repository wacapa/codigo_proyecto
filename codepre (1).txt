#include <Keypad.h>
#include "ListLib.h"
#include "PinChangeInterrupt.h"

const byte rowsCount = 4;
const byte columsCount = 3;

char keys[rowsCount][columsCount] = {
   { '1','2','3' },
   { '4','5','6' },
   { '7','8','9'},
   { '*','0','#' }
};

const byte rowPins[rowsCount] = {2, 3, 4, 5};//{ 8, 7, 6, 5 };
const byte columnPins[columsCount] = {6, 7, 8};//{ 4, 3, 2 };

Keypad keypad = Keypad(makeKeymap(keys), rowPins, columnPins, rowsCount, columsCount);


int c0=1.5;
int t=20;

int c1=0;
int c2=0;
int c3=0;
int c4=0;
int bt=5;
const int interruptPin=13;


int divi=0;
char num;
List<char> list;


void mot1(){
  PORTB|=0b10;          
}

void mot2(){
  PORTB|=0b100;          
}

void mot3(){
  PORTB|=0b1000;          
}

void mot4(){
  PORTB|=0b10000;          
}

void apagado(){
  PORTB&=0b00000;
}
void setup(){
  DDRB = 0b11110;  //Pin 8.9,10,11 del arduino salidas


  //pinMode(interruptPin, INPUT);
  //attachPinChangeInterrupt(digitalPinToPinChangeInterrupt(interruptPin), apagado, FALLING);  

}

void loop(){

  
  char key = keypad.getKey();
  
 
  while(PINB & (1<<bt)){
    
  }
  if (key){
    
    delay(500);
    if (key=='1'){
      divi =5000;
      
      while(c1<1){
        char key1=keypad.getKey();
        
        if(key1){
          list.Add(key1);
          c1++;
        }
      }
      c1=0;                  
      
    }

    if (key=='2'){
      divi =2500;
      
      while(c2<2){
        char key2=keypad.getKey();
        if(key2){
          delay(1000);
          list.Add(key2);
        
          c2++;
        }
      }
      c2=0;                  
      
    }
    if (key=='3'){
      divi =1666;
      
      while(c3<3){
        char key3=keypad.getKey();
        if(key3){
          delay(1000);
          list.Add(key3);
          c3++;
        }
      }
      c3=0;                  
      
    }        
    if (key=='4'){
      divi=1000;      
      mot1();
      delay(divi);
      apagado();
      mot2();
      delay(divi);
      apagado();
      mot3();
      delay(divi);
      apagado();
      mot4();
      delay(divi);
      apagado();     
      
    }
  }
  if (list.Count()>0){
    for (int i=0; i<list.Count();i++){
      num=list[i];
      if(num=='1'){
        mot1();
        delay(divi);
        apagado();       
        
      }
      if(num=='2'){
        mot2();
        delay(divi);
        apagado();       
        
      }
      if(num=='3'){
        mot3();
        delay(divi);
        apagado();       
        
      }
      if(num=='4'){
        mot4();
        delay(divi);
        apagado();       
        
      }
    }
    
  }
  list.Clear();

  
}
